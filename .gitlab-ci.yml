.python_venv:
  image: python:3
  before_script:
    - python3 -m venv .venv
    - source .venv/bin/activate
    - python -V
    - pip install -r requirements.txt

test_generation:
  stage: test
  extends: .python_venv
  script:
    - cd proto
    - python tests.py

test_interaction:
  rules:
    - if: $NO_GHDL == null
  stage: test
  extends: .python_venv
  script:
    - cd testfiles/tb
    - ./run.sh

documentation:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
      - doc/**/*
  cache:
    - key:
        files:
          - doc/Gemfile.lock
      paths:
        - doc/vendor/bundle
  artifacts:
    paths:
      - doc/*.pdf
  script:
    - cd doc
    - bundle config set --local path 'vendor/bundle'
    - bundle install
    - make all

deploy:
  stage: deploy
  only:
    - master
    - tags
  tags:
    - cheby-cd
  script:
    - source integration/cern-ci.sh

docker-publish:
  stage: deploy
  only:
    - master
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    # for tagged versions: use the tag as the image name, for master: use latest
    - export IMAGE_NAME=$(if [ -z "$CI_COMMIT_TAG" ]; then echo "latest"; else echo "$CI_COMMIT_TAG"; fi)
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$IMAGE_NAME

